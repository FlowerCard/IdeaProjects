https://yiqixie.qingque.cn/d/home/fcACLZzbFdPZB1O2ncc_k231p
Collection 和 Collections的区别
答：Collection是集合类的上级接口，继承与他的接口主要有Set 和List.
Collections是针对集合类的一个帮助类，他提供一系列静态方法实现对各种集合的搜索、排序、线程安全化等操作

--------------------------------------------------
Set里的元素是不能重复的，那么用什么方法来区分重复与否呢? 是用==还是equals()? 它们有何区别
答：Set里的元素是不能重复的，那么用iterator()方法来区分重复与否。equals()是判读两个Set是否相等
    equals()和==方法决定引用值是否指向同一对象equals()在类中被覆盖，为的是当两个分离的对象的内容
    和类型相配的话，返回真值

--------------------------------------------------
List, Set, Map是否继承自Collection接口
答： List，Set是，Map不是

--------------------------------------------------
两个对象值相同(x.equals(y) == true)，但却可有不同的hash code，这句话对不对
答：不对，有相同的hash code

--------------------------------------------------
说出ArrayList,Vector, LinkedList的存储性能和特性
答：ArrayList和Vector都是使用数组方式存储数据，此数组元素数大于实际存储的数据以便增加和
插入元素，它们都允许直接按序号索引元素，但是插入元素要涉及数组元素移动等内存操作，所以
索引数据快而插入数据慢，Vector由于使用了synchronized方法（线程安全），通常性能上较ArrayList
差，而LinkedList使用双向链表实现存储，按序号索引数据需要进行前向或后向遍历，但是插入数据时
只需要记录本项的前后项即可，所以插入速度较快。

--------------------------------------------------
HashMap和Hashtable的区别
答：HashMap是Hashtable的轻量级实现（非线程安全的实现），他们都完成了Map接口，主要区别在于HashMap
允许空（null）键值（key）,由于非线程安全，效率上可能高于Hashtable。
    HashMap允许将null作为一个entry的key或者value，而Hashtable不允许。
    HashMap把Hashtable的contains方法去掉了，改成containsvalue和containsKey。因为contains方法容易让
人引起误解。 
    Hashtable继承自Dictionary类，而HashMap是Java1.2引进的Map interface的一个实现。
    最大的不同是，Hashtable的方法是Synchronize的，而HashMap不是，在多个线程访问Hashtable时，不需要
自己为它的方法实现同步，而HashMap 就必须为之提供外同步。 
    Hashtable和HashMap采用的hash/rehash算法都大概一样，所以性能不会有很大的差异。

--------------------------------------------------

ArrayList和Vector的区别,HashMap和Hashtable的区别
答：就ArrayList与Vector主要从二方面来说.
一.同步性:Vector是线程安全的，也就是说是同步的，而ArrayList是线程序不安全的，不是同步的
二.数据增长:当需要增长时,Vector默认增长为原来一培，而ArrayList却是原来的一半
就HashMap与HashTable主要从三方面来说。
一.历史原因:Hashtable是基于陈旧的Dictionary类的，HashMap是Java 1.2引进的Map接口的一个实现
二.同步性:Hashtable是线程安全的，也就是说是同步的，而HashMap是线程序不安全的，不是同步的
三.值：只有HashMap可以让你将空值作为一个表的条目的key或value

--------------------------------------------------

1. 定义一个Employee类，
该类包含：private成员变量name,age,birthday，其中 birthday 为 MyDate 类的对象；
并为每一个属性定义 getter, setter 方法；
并重写 toString 方法输出 name, age, birthday
 
MyDate类包含:
private成员变量month,day,year；并为每一个属性定义 getter, setter 方法；
 
创建该类的 5 个对象，并把这些对象放入 TreeSet 集合中（下一章：TreeSet 需使用泛型来定义）
分别按以下两种方式对集合中的元素进行排序，并遍历输出：
 
1). 使Employee 实现 Comparable 接口，并按 name 排序
2). 创建 TreeSet 时传入 Comparator对象，按生日日期的先后排序。
 
提示：Employee类是否需要重写equals()方法？MyDate类呢？


 List与Set的区别。
LinkedList与ArrayList有区别？
Stack的特点是什么？pop和peek的区别?

2.设计一个Student类，该类中包括学生的姓名和成绩。创建Student类的5个对象，如下所示：
 
姓名
成绩
刘德华
85
张学友
100
刘杰
65
章子怡
58
周迅
76
 
 
将以上5个对象放入LinkedList中，
完成如下操作和统计：
 1、输出LinkedList中的对象个数。
 2、删除姓名为“刘杰”的学生信息，并输出LinkedList中现有学生信息。
 3、将姓名为“刘德华”的学生成绩改为95。
 4、输出成绩不及格的学生姓名

3.编写一个ArrayList类，用来存储1到10之间的数，打乱顺序后输出，按从小到大输出，按从大到小输出

4.已知有十六支男子足球队参加2008 北京奥运会。写一个程序，把这16 支球队随机分为4 个组。
注：参赛球队列表见附录
注2：使用Math.random 来产生随机数。（也可以使用其它方法）
2008 北京奥运会男足参赛国家：
科特迪瓦，阿根廷，澳大利亚，塞尔维亚，荷兰，尼日利亚、日本，美国，中国，
新西兰，巴西，比利时，韩国，喀麦隆，洪都拉斯，意大利



5.十五个猴子围成一圈选大王，依次1-7 循环报数，报到7 的猴子被淘汰，直到最后一只猴子成为大王。问，哪只猴子最后能成为大王？（选择一个适当的集合)

6.定义一个Set，向Set中存储5个人名，其中有两个是重复的，输出Set集合的数据，通过for each,和Iterator两种方法。

7.编写一个22选5的彩票选号程序。每次选出不同的五组号码，并输出到控制台中


8.编写一个扑克类(每张扑克有花色和数值，例如红心A,草花10),将52张扑克牌放到集合中(自己去选择集合类)
  编写3个方法
  方法1.将集合中的所有扑克重新洗牌,并将扑克输出(打印出来即可)
  方法2.将集合中的所有扑克排序(按方块3~方块2,草花3~草花2, 红心3~红心2, 黑桃3~黑桃2的顺序排序)
   方法3：比较两张扑克牌的大小，如果版面的值相等，则按（黑桃->红心->草花->方块）的顺序进行排列


put 方法表示放入一个键值对，如果键已存在则_____，如果键不存在则_________。
remove 方法接受___个参数，表示________________。
get 方法表示_______对应的________________，get 方法的参数表示___，返回值表示__。
要想获得Map 中所有的键，应该使用方法__________，该方法返回值类型为_____。
要想获得Map 中所有的值，应该使用方法___________，该方法返回值类型为______。
要想获得Map 中所有的键值对的集合，应该使用方法___________，该方法返回一个_____类型所组成的Set。




（Map）利用Map，完成下面的功能：
1.从命令行读入一个字符串，表示一个年份，输出该年的世界杯冠军是哪支球队。如果该
年没有举办世界杯，则输出：没有举办世界杯。
2. 读入一支球队的名字，输出该球队夺冠的年份列表。
例如，读入“巴西”，应当输出
1958 1962 1970 1994 2002
读入“荷兰”，应当输出
没有获得过世界杯


（Map）已知某学校的教学课程内容安排如下：

完成下列要求：
1） 使用一个Map，以老师的名字作为键，以老师教授的课程名作为值，表示上述
课程安排。
2） 增加了一位新老师Allen 教JDBC
3） Lucy 改为教CoreJava   put方法
4） 遍历Map，输出所有的老师及老师教授的课程(Set<Map.Entry<String,String>>、Set<String> get(key))
5） 利用Map，输出所有教JSP 的老师



（综合）有如下Student 对象

其中，classNum 表示学生的班号，例如“class05”。
有如下List
List list = new ArrayList();
list.add(new Student(“Tom”, 18, 100, “class05”));
list.add(new Student(“Jerry”, 22, 70, “class04”));
list.add(new Student(“Owen”, 25, 90, “class05”));
list.add(new Student(“Jim”, 30,80 , “class05”));
list.add(new Student(“Steve”, 28, 66, “class06”));
list.add(new Student(“Kevin”, 24, 100, “class04”));
在这个list 的基础上，完成下列要求：
1） 计算所有学生的平均年龄
2） 计算各个班级的平均分
